# Arquivo de configura\u00e7\u00e3o do Sistema
versao=1.3
# Niveis de Debug ===========================================================
# 1000 = DDLs
# 0100 = DMLs
# 0010 = AVISOS
# 0001 = CRIAR ARQUIVO LOG NO DISCO
debug=1111
debug_info=0
# Dados de conex\u00e3o do Postgres
driverPostgres=org.postgresql.Driver
urlPostgres=jdbc:postgresql://45.55.172.49:5432/kinderland_producao
userPostgres=postgres
pwdPostgres=campateri14

# SQL PARA MIGRA\u00c7\u00c3O
limpa_bd=delete from telephone; delete from person_user_type; delete from person_user; delete from person;delete from address;
select_todas_pessoas=SELECT distinct public.pessoa.sequencial,pessoa.sexo, responsavel.data_de_cadastro,  public.pessoa.nome,  now(),  now(),  CASE     WHEN public.pessoa.sexo = ''      THEN 'M'    ELSE  sexo  END AS "FIELD_1",  public.pessoa.email,  FALSE AS field_1 FROM  public.pessoa  INNER JOIN public.responsavel ON (public.pessoa.sequencial = public.responsavel.sequencial) where pessoa.sexo <> '' and public.pessoa.sequencial not in (select person_id from person) order by nome
select_todos_responsaveis=SELECT public.responsavel.data_de_cadastro, public.responsavel.ocupacao, public.responsavel.sequencial, public.responsavel.cpf,  public.person.email FROM  public.responsavel  INNER JOIN public.person ON (public.responsavel.sequencial = public.person.person_id) where responsavel.cpf not in (select cpf from person_user) order by responsavel.cpf
select_todos_enderecos=SELECT public.endereco.*,  public.person.person_id FROM  public.person  INNER JOIN public.mora_em ON (public.person.person_id = public.mora_em.sequencial_pessoa)  INNER JOIN public.endereco ON (public.mora_em.sequencial_endereco = public.endereco.sequencial)


insert_person=INSERT INTO public.person(person_id, fullname, date_created, gender, email, date_updated, benemerit) VALUES ( ?, ?, ?, ?, ?, now(), false);
insert_person_user=INSERT INTO public.person_user(person_id, cpf, login, password, occupation) VALUES (?,?,?,?,?);
insert_telephone=INSERT INTO public.telephone(phone_number, person_id) (select distinct telefone, sequencial from telefone where sequencial in (select person_id from person));
insert_adress=INSERT INTO public.address(address_id, street, place_number, complement, city, cep, uf, neighborhood) VALUES (?,?,?,?,?,?,?,?);
insert_user_type=INSERT INTO public.person_user_type(person_id, user_type) (select person_id, 1 from person_user where person_id not in (select person_id from person_user_type));
ajust_sequences=select setval('address_address_id_seq', (select max(address_id)+1 from address), false);select setval('person_person_id_seq', (select max(person_id)+1 from person), false);


